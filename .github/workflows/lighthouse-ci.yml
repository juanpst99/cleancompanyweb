name: Lighthouse CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Run Lighthouse CI
        run: npm run lh:ci
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci
          retention-days: 7
          
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const resultsPath = '.lighthouseci/lhr-0.json';
            
            if (fs.existsSync(resultsPath)) {
              const lhr = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
              const scores = {
                performance: Math.round(lhr.categories.performance.score * 100),
                accessibility: Math.round(lhr.categories.accessibility.score * 100),
                'best-practices': Math.round(lhr.categories['best-practices'].score * 100),
                seo: Math.round(lhr.categories.seo.score * 100)
              };
              
              const comment = `## üö¶ Lighthouse Results
              
              | Category | Score |
              |----------|-------|
              | Performance | ${scores.performance}% ${scores.performance >= 85 ? '‚úÖ' : '‚ö†Ô∏è'} |
              | Accessibility | ${scores.accessibility}% ${scores.accessibility >= 90 ? '‚úÖ' : '‚ö†Ô∏è'} |
              | Best Practices | ${scores['best-practices']}% ${scores['best-practices'] >= 95 ? '‚úÖ' : '‚ö†Ô∏è'} |
              | SEO | ${scores.seo}% ${scores.seo === 100 ? '‚úÖ' : '‚ö†Ô∏è'} |
              
              ### Core Web Vitals
              - **FCP**: ${lhr.audits['first-contentful-paint'].displayValue}
              - **LCP**: ${lhr.audits['largest-contentful-paint'].displayValue}
              - **CLS**: ${lhr.audits['cumulative-layout-shift'].displayValue}
              - **TBT**: ${lhr.audits['total-blocking-time'].displayValue}
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }